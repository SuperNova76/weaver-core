treename: ntuplizer/Events

selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   (MuonSelected_LepGood_pt[:,0] > 5) & (np.abs(MuonSelected_LepGood_eta[:,0]) < 2.4)

test_time_selection: 
   (MuonSelected_LepGood_pt[:,0] > 5) & (np.abs(MuonSelected_LepGood_eta[:,0]) < 2.4)

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   # pfcand_mask: ak.ones_like(jet_pfcand_deta)
   # pfcand_mask: ak.ones_like((jet_pfcand_pt>0.3)&(jet_pfcand_pt<1000))
   label_prompt: (genPartFlav == 1)
   label_tau: (genPartFlav == 15)
   label_heavy: (genPartFlav == 5)
   label_lightfake: (genPartFlav != 1) & (genPartFlav != 15) & (genPartFlav != 5)
   label_IsoLow: (MuonSelected_LepGood_miniRelIsoCharged[:,0] <= 0.05)
   label_IsoMedium: (MuonSelected_LepGood_miniRelIsoCharged[:,0] > 0.05) & (MuonSelected_LepGood_miniRelIsoCharged[:,0] <= 0.10)
   label_IsoHigh: (MuonSelected_LepGood_miniRelIsoCharged[:,0] > 0.10)
   PF_mask : np.isfinite(PF_dzSig)
   SV_mask : np.isfinite(SV_pt)
   Lepton_mask:  ak.ones_like(MuonSelected_LepGood_pt)
   # MuonSelected_LepGood_abseta : np.abs(MuonSelected_LepGood_eta[:,0])
   MuonSelected_LepGood_theeta : MuonSelected_LepGood_eta[:,0]
   MuonSelected_LepGood_thept : MuonSelected_LepGood_pt[:,0]
   # MuonSelected_LepGood_thepx : np.abs(MuonSelected_LepGood_px[:,0])
   # MuonSelected_LepGood_thepy : np.abs(MuonSelected_LepGood_py[:,0])
   # MuonSelected_LepGood_thepz : np.abs(MuonSelected_LepGood_pz[:,0])
   # MuonSelected_LepGood_theenergy : np.abs(MuonSelected_LepGood_energy[:,0])

preprocess:
   ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
   method: manual
   ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
   data_fraction: 1

inputs:
   pf_features:
      length: 50
      pad_mode: wrap
      vars:
         ### [format 1]: var_name (no transformation)
         ### [format 2]: [var_name,
         ###              subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto),
         ###              multiply_by(optional, default=1),
         ###              clip_min(optional, default=-5),
         ###              clip_max(optional, default=5),
         ###              pad_value(optional, default=0)]
         # - PF_pt
         - [PF_pt_log, 1, 0.5]
         - [PF_energy_log, 1, 0.5]
         - [PF_pt_rel_log, null]
         - [PF_eta_rel, null]
         - [PF_phi_rel, null]
         - [PF_charge, null]
         - [PF_isElectron, null]
         - [PF_isMuon, null]
         # - [PF_isNeutralHadron, null]
         # - [PF_isPhoton, null]
         # - [PF_isChargedHadron, null]
         # - [PF_fromPV, 2, 1]
         # - [PF_puppiWeightNoLep, null]
         # - [PF_hcalFraction, null]
         # - [PF_dzSig, 0, 0.01]
         # - [PF_dxySig, 0, 0.01]
   # pf_vectors:
   #    length: 50
   #    pad_mode: wrap
   #    vars:
   #       - [PF_px, null]
   #       - [PF_py, null]
   #       - [PF_pz, null]
   #       - [PF_energy, null]
   # pf_mask:
   #    length: 50
   #    pad_mode: constant
   #    vars:
   #       - [PF_mask, null]

   sv_features:
      length: 5
      pad_mode: wrap
      vars:
         - [SV_pt_log, 3, 0.6]
         - [SV_mass, 1.2, 0.3]
         - [SV_phi_rel, null]
         - [SV_eta_rel, null]
         # - [SV_dlenSig, null]
         # - [SV_dxy, 0.2, 0.25]
         # - [SV_ndof, null]
         # - [SV_chi2, 1, 0.5]
         # - [SV_cospAngle, null]
         # - [SV_nTracks, 3, 1]

   # sv_vectors:
   #    length: 5
   #    pad_mode: wrap
   #    vars:
   #       - [SV_px, null]
   #       - [SV_py, null]
   #       - [SV_pz, null]
   #       - [SV_energy, null]    
   # sv_mask:
   #    length: 5
   #    pad_mode: constant
   #    vars:
   #       - [SV_mask, null]

   lep_features:
      length: 1
      pad_mode: constant
      vars:
         - [MuonSelected_dxy, 0, 0.25, -25, 25]
         - [MuonSelected_dz, 0, 0.1, -10, 10]
         # - [MuonSelected_sip3d, null]
         - [MuonSelected_segmentComp, null]
         - [MuonSelected_LepGood_jetDF, null]
         - [MuonSelected_LepGood_jetPtRatio, null]
         # - [MuonSelected_LepGood_jetNDauChargedMVASel, null]
         - [MuonSelected_LepGood_dz, 0, 0.1, -10, 10]
         - [MuonSelected_LepGood_eta, null]
         # - [MuonSelected_LepGood_miniRelIsoNeutral, null]
         # - [MuonSelected_LepGood_jetPtRelv2, null]
         - [MuonSelected_LepGood_miniRelIsoCharged, null]
         # - [MuonSelected_mvaId, null]
   # lep_vectors:
   #    length: 1
   #    pad_mode: constant
   #    vars:
   #       - [MuonSelected_LepGood_px, null]
   #       - [MuonSelected_LepGood_py, null]
   #       - [MuonSelected_LepGood_pz, null]
   #       - [MuonSelected_LepGood_energy, null]    
   # lep_mask:
   #    length: 1
   #    pad_mode: constant
   #    vars:
   #       - [Lepton_mask, null]

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [label_lightfake, label_prompt, label_tau, label_heavy]
   
labels_domain:
   type: custom
   value:
     label_domain_iso: [label_IsoLow, label_IsoMedium, label_IsoHigh]
   loss_weight:
     [1]

# observers:


weights:
   ### [option 1] use precomputed weights stored in the input files
   # use_precomputed_weights: true
   # weight_branches: [weight, class_weight]
   ### [option 2] compute weights on-the-fly using reweighting histograms
   use_precomputed_weights: false
   reweight_method: flat
   reweight_vars:
      # MuonSelected_LepGood_thept: [5, 10, 15, 20, 25, 30, 38, 48, 60, 76, 97, 122, 154, 195, 246, 311, 393, 496, 627, 792, 99999.]
      # MuonSelected_LepGood_theeta: [-2.4, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.4]
      MuonSelected_LepGood_thept: [5, 25, 50, 100, 250, 99999.]
      MuonSelected_LepGood_theeta: [-2.5, -1.0, 0.0, 1.0, 2.5]
      # MuonSelected_LepGood_thept: [5, 99999.]
      # MuonSelected_LepGood_theeta: [-2.4, 2.4]
   reweight_classes: [label_lightfake, label_prompt, label_tau, label_heavy]
  #  reweight_exclude_classes: [label_IsoLow, label_IsoMedium, label_IsoHigh]
   class_weights: [1, 1, 1, 1]
   reweight_threshold: 15
   reweight_hists:
